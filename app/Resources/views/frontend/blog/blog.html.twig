{% extends 'base.html.twig' %}
{% block content %}
    <div class="page_header">

        <div class="bcrumb-wrap">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <ul class="bcrumbs">
                            <li><a href="#"><i class="fa fa-home"></i> Accueil</a></li>
                            <li>BLog</li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- INNER CONTENT -->
    <div class="inner-content">
        <div class="container">
            <div class="row">
                <!-- Sidebar -->
                <aside class="col-sm-3 ">
                    <div class="side-widget space50">
                        <h4>recherche...</h4>
                        <form action="{{ path('consulterblogdront')}}" class="search-widget" method="post" id="search-form">
                            <input name="q" type="text" class="form-control" placeholder="Search Google..." autocomplete="off" autofocus>
                            <!-- <button type="button"><i class="fas fa-microphone"></i></button> -->
                        </form>
                    </div>
                    <div class="side-widget space50">
                        <h4>Categories</h4>
                        <ul class="list-unstyled cat-list">


                            {% for a in categorie %}
                                <form method="post" action="{{ path('consulterblogdront')}}" >
                                    <input type="text" name="cate" value="{{ a.id }}" style="opacity: 0.0;">
                            <li> <input type="submit"  class="btn btn-link"  value="{{ a.nom }}" > </li>
                            </form>
                            {% endfor %}

                        </ul>
                    </div>


                    <div class="side-widget">
                        <h4>Mot Clé</h4>
                        <div class="tag-list">
                            <a href="#">velo</a>
                            <a href="#">bmx</a>
                            <a href="#">bike</a>
                            <a href="#">volant</a>
                            <a href="#">sport</a>
                            <a href="#">pedale</a>
                            <a href="#">casque</a>

                        </div>
                    </div>
                </aside>

                <div class="col-md-9 blog-content">
                    {% for a in blog %}

                        <article class="blogpost">
                            <h2 class="post-title"><a href="#">{{ a.nom }}</a></h2>
                            <div class="post-meta">

                                <span><a href="#"><i class="icon-clock2">   {{ a.dateAjout? a.dateAjout|ago: 'unpublished' }}</i></a></span>
                                <span><i class="icon-archive3"></i> <a href="">{{ a.categorie }}</a></span>

                            </div>
                            <div class="space20"></div>
                            <div class="post-media">
                                <img src="{{ asset('uploads/images/' ~ a.image1) }}" class="img-responsive">
                            </div>
                            <div class="space20"></div>

                            <a href="{{ path('consulterblogfront',{'id':a.id}) }}" class="button btn-xs">Lire plus&nbsp;&nbsp;<i class="fa fa-angle-right"></i></a>
                        </article>




                        <div class="blog-sep"></div>
                    {% endfor %}


                </div>

            </div>
        </div>
    </div>

    </div>

    <style>
        /* Chat containers */
        .para{
            font-size: 10px;
        }
        .containerChat {
            border: 1px solid #dedede;
            background-color: #f1f1f1;
            border-radius: 3px;
            padding: 2px;
            margin: 5px 0;
        }

        /* Darker chat container */
        .darker {
            border-color: #ccc;
            background-color: #ddd;
        }

        /* Clear floats */
        .containerChat::after {
            content: "";
            clear: both;
            display: table;
        }


        /* Style the right image */
        .containerChat .right {
            float: right;
            margin-left: 20px;
            margin-right:0;
        }

        /* Style time text */
        .time-right {
            float: right;
            color: #aaa;
        }

        /* Style time text */
        .time-left {
            float: left;
            color: #999;
        }
    </style>
    <div class="b-settings-panel">

        <h5>Conversation Instantané</h5>
        <div class="settings-section">
            <div id="chat-list" style="max-height: 100px;overflow-y: auto;"></div>
            <hr>
            <input id="form-message" class="form-control input-sm" type="text"  placeholder="text">
            <center>
                <input type="button" class="btn btn-sm btn-primary " id="form-submit" value="Send message"/>
            </center>
        </div>


        <div class="settings-section ">
            <input type="text" class="form-control" id="userConnected" value="{{ '%username%'|trans({'%username%': app.user.username}, 'FOSUserBundle') }}" hidden/>

        </div>
        <div class="btn-settings"></div>
    </div>



    <script>
        // This object will be sent everytime you submit a message in the sendMessage function.
        var clientInformation = {
            username: document.getElementById('userConnected').value
            // You can add more information in a static object
        };

        // START SOCKET CONFIG
        /**
         * Note that you need to change the "sandbox" for the URL of your project.
         * According to the configuration in Sockets/Chat.php , change the port if you need to.
         * @type WebSocket
         */
        var conn = new WebSocket('ws://localhost:8080');

        conn.onopen = function(e) {
            console.info("Connection established succesfully");
        };

        conn.onmessage = function(e) {
            var data = JSON.parse(e.data);
            Chat.appendMessage(data.username, data.message);

            console.log(data);
        };

        conn.onerror = function(e){
            alert("Error: something went wrong with the socket.");
            console.error(e);
        };
        // END SOCKET CONFIG


        /// Some code to add the messages to the list element and the message submit.
        document.getElementById("form-submit").addEventListener("click",function(){
            var msg = document.getElementById("form-message").value;

            if(!msg){
                alert("Please send something on the chat");
            }

            Chat.sendMessage(msg);
            // Empty text area
            document.getElementById("form-message").value = "";
        }, false);
        function prettyDate2(time) {
            var date = new Date(parseInt(time));
            return date.toLocaleTimeString(navigator.language, {
                hour: '2-digit',
                minute:'2-digit'
            });
        }
        // Mini API to send a message with the socket and append a message in a UL element.
        var Chat = {
            appendMessage: function(username,message){
                var from;

                if(username === clientInformation.username){
                    from = "me";
                    document.getElementById("chat-list").innerHTML+='<div class="containerChat"><p class="para"><b>'+ from+' : </b>'+ message +'</p><span class="time-right para">'+ prettyDate2(Date.now())+'</span> </div>';


                }else{
                    from = clientInformation.username;
                    document.getElementById("chat-list").innerHTML+='<div class="containerChat darker"><p class="para right">'+ message +' : <b>'+ from+'</b></p><span class="time-left para">'+ prettyDate2(Date.now()) +'</span> </div>';

                }

                // Append List Item
            },
            sendMessage: function(text){
                clientInformation.message = text;
                // Send info as JSON
                conn.send(JSON.stringify(clientInformation));
                // Add my own message to the list
                this.appendMessage(clientInformation.username, clientInformation.message);
            }
        };
    </script>
{% endblock %}